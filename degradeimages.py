# -*- coding: utf-8 -*-
"""DegradeImages.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wHtVMWsofAYyU4zjHNf2UMu6kGO8Y8-9
"""

pip install opencv-python pillow

import cv2
import numpy as np
import os
from PIL import Image, ImageFilter

#Function to add Gaussian noise to an image
def add_noise(image):
  row, col, ch = image.shape
  mean = 0
  sigma = 25
  gauss = np.random.normal(mean, sigma, (row, col, ch))
  noisy = np.array(image, dtype=np.float32) + gauss
  noisy = np.clip(noisy,0,255)
  return noisy.astype(np.uint8)

#Function to apply Gaussian blur
def apply_blur(image):
  return cv2.GaussianBlur(image, (5,5), 0)

#Function to downsample and then upscale the image
def downsample(image):
  height, width = image.shape[:2]
  small = cv2.resize(image, (width // 2, height // 2), interpolation=cv2.INTER_LINEAR)
  return cv2.resize(small, (width, height), interpolation=cv2.INTER_LINEAR)

# Process all images in a folder
def degrade_images(input_folder, output_folder):
    for filename in os.listdir(input_folder):
        if filename.endswith('.jpg') or filename.endswith('.png'):
            img_path = os.path.join(input_folder, filename)
            img = cv2.imread(img_path)

            # Apply degradation
            img_with_noise = add_noise(img)
            img_blurred = apply_blur(img)
            img_downsampled = downsample(img)

            # Save degraded images
            cv2.imwrite(os.path.join(output_folder, f'noise_{filename}'), img_with_noise)
            cv2.imwrite(os.path.join(output_folder, f'blur_{filename}'), img_blurred)
            cv2.imwrite(os.path.join(output_folder, f'downsample_{filename}'), img_downsampled)

# Set input and output folders
input_folder = "/content/drive/My Drive/ColabNotebooks/Images/Ref"
output_folder = "/content/drive/My Drive/ColabNotebooks/Images/Degraded"

from google.colab import drive
drive.mount("/content/drive")

degrade_images(input_folder, output_folder)